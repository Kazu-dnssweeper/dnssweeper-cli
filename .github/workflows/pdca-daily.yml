name: Daily PDCA Check
on:
  schedule:
    - cron: '0 0 * * *'  # 毎日 UTC 0:00 (JST 9:00)
  workflow_dispatch:  # 手動実行も可能

jobs:
  daily-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Run tests
        id: test
        run: |
          echo "### 🧪 テスト実行" >> $GITHUB_STEP_SUMMARY
          pnpm test --silent 2>&1 | tee test-output.log
          TEST_EXIT_CODE=${PIPESTATUS[0]}
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "✅ テスト成功" >> $GITHUB_STEP_SUMMARY
            echo "test_status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ テスト失敗" >> $GITHUB_STEP_SUMMARY
            echo "test_status=failure" >> $GITHUB_OUTPUT
          fi
          
      - name: Run build
        id: build
        run: |
          echo "### 🔨 ビルド実行" >> $GITHUB_STEP_SUMMARY
          pnpm build
          if [ $? -eq 0 ]; then
            echo "✅ ビルド成功" >> $GITHUB_STEP_SUMMARY
            echo "build_status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ ビルド失敗" >> $GITHUB_STEP_SUMMARY
            echo "build_status=failure" >> $GITHUB_OUTPUT
          fi
          
      - name: Check TypeScript
        id: typecheck
        run: |
          echo "### 📝 型チェック" >> $GITHUB_STEP_SUMMARY
          pnpm typecheck
          if [ $? -eq 0 ]; then
            echo "✅ 型チェック成功" >> $GITHUB_STEP_SUMMARY
            echo "typecheck_status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ 型エラーあり" >> $GITHUB_STEP_SUMMARY
            echo "typecheck_status=failure" >> $GITHUB_OUTPUT
          fi
          
      - name: Generate daily report
        run: |
          DATE=$(date +'%Y-%m-%d')
          mkdir -p .pdca/daily
          
          cat > .pdca/daily/${DATE}-report.yml << EOF
          date: "${DATE}"
          status: "${{ steps.test.outputs.test_status == 'success' && steps.build.outputs.build_status == 'success' && steps.typecheck.outputs.typecheck_status == 'success' && 'GREEN' || 'RED' }}"
          tests: "${{ steps.test.outputs.test_status }}"
          build: "${{ steps.build.outputs.build_status }}"
          typecheck: "${{ steps.typecheck.outputs.typecheck_status }}"
          time_spent: "$(date -u -d @${SECONDS} +'%M分%S秒')"
          EOF
          
          echo "### 📊 日次PDCAレポート" >> $GITHUB_STEP_SUMMARY
          echo "日付: ${DATE}" >> $GITHUB_STEP_SUMMARY
          echo "ステータス: ${{ steps.test.outputs.test_status == 'success' && steps.build.outputs.build_status == 'success' && steps.typecheck.outputs.typecheck_status == 'success' && '✅ GREEN' || '❌ RED' }}" >> $GITHUB_STEP_SUMMARY
          
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Daily PDCA Check Failed - ${date}`,
              body: `## Daily PDCA Check Failed
              
              日次PDCAチェックで問題が検出されました。
              
              ### 詳細
              - テスト: ${{ steps.test.outputs.test_status }}
              - ビルド: ${{ steps.build.outputs.build_status }}
              - 型チェック: ${{ steps.typecheck.outputs.typecheck_status }}
              
              ### アクション
              1. [ワークフロー実行結果を確認](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              2. 問題を修正
              3. 修正完了後、このIssueをクローズ
              `,
              labels: ['pdca', 'daily-check', 'automated']
            });
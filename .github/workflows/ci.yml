name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm test -- --passWithNoTests --ci --coverage --forceExit
    
    - name: Upload coverage reports
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type check
      run: npm run type-check
    
    - name: Run ESLint
      run: npm run lint || echo "ESLint warnings detected (non-blocking)"
    
    - name: Build project
      run: npm run build
    
    - name: Test build output
      run: |
        echo "ビルド成果物の確認..."
        node dist/index.js --version
        node dist/index.js --help

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for known vulnerabilities
      run: npm audit --production
      continue-on-error: true
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      with:
        args: --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: Upload security results
      if: always()
      run: |
        echo "セキュリティスキャン完了" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 セキュリティレポート" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        npm audit --json > audit-report.json || true
        if [ -f audit-report.json ]; then
          echo "脆弱性数: $(jq '.metadata.vulnerabilities.total' audit-report.json)" >> $GITHUB_STEP_SUMMARY
        fi
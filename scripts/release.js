#!/usr/bin/env node
/**
 * „É™„É™„Éº„ÇπËá™ÂãïÂåñ„Çπ„ÇØ„É™„Éó„Éà
 */

const { execSync } = require('child_process');
const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function exec(command, options = {}) {
  console.log(`üìç ÂÆüË°å: ${command}`);
  try {
    return execSync(command, { encoding: 'utf8', stdio: 'inherit', ...options });
  } catch (error) {
    if (!options.ignoreError) {
      console.error(`‚ùå „Ç®„É©„Éº: ${command}`);
      process.exit(1);
    }
  }
}

async function prompt(question) {
  return new Promise(resolve => {
    rl.question(question, answer => {
      resolve(answer);
    });
  });
}

async function main() {
  console.log('üöÄ DNSweeper CLI „É™„É™„Éº„Çπ„Éó„É≠„Çª„ÇπÈñãÂßã\n');
  
  // 1. ÁèæÂú®„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç
  console.log('üìä ÁèæÂú®„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç‰∏≠...');
  const currentVersion = JSON.parse(fs.readFileSync('package.json', 'utf8')).version;
  console.log(`ÁèæÂú®„ÅÆ„Éê„Éº„Ç∏„Éß„É≥: ${currentVersion}`);
  
  // 2. „ÇØ„É™„Éº„É≥„Å™Áä∂ÊÖã„ÅãÁ¢∫Ë™ç
  const gitStatus = execSync('git status --porcelain', { encoding: 'utf8' });
  if (gitStatus.trim()) {
    console.log('‚ö†Ô∏è  Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„Åå„ÅÇ„Çä„Åæ„Åô:');
    console.log(gitStatus);
    const proceed = await prompt('Á∂öË°å„Åó„Åæ„Åô„ÅãÔºü (y/N): ');
    if (proceed.toLowerCase() !== 'y') {
      console.log('„É™„É™„Éº„Çπ„Çí‰∏≠Ê≠¢„Åó„Åæ„Åó„Åü');
      process.exit(0);
    }
  }
  
  // 3. „ÉÜ„Çπ„ÉàÂÆüË°å
  console.log('\nüß™ „ÉÜ„Çπ„ÉàÂÆüË°å‰∏≠...');
  exec('npm test -- --passWithNoTests --ci --coverage=false --forceExit');
  
  // 4. „Éì„É´„Éâ
  console.log('\nüèóÔ∏è  „Éì„É´„ÉâÂÆüË°å‰∏≠...');
  exec('npm run build');
  
  // 5. „Éê„Éº„Ç∏„Éß„É≥ÈÅ∏Êäû
  console.log('\nüìå Êñ∞„Åó„ÅÑ„Éê„Éº„Ç∏„Éß„É≥„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ:');
  console.log('1) patch (‰øÆÊ≠£: 0.1.0 ‚Üí 0.1.1)');
  console.log('2) minor (Ê©üËÉΩËøΩÂä†: 0.1.0 ‚Üí 0.2.0)');
  console.log('3) major (Á†¥Â£äÁöÑÂ§âÊõ¥: 0.1.0 ‚Üí 1.0.0)');
  console.log('4) ÊâãÂãïÂÖ•Âäõ');
  
  const choice = await prompt('ÈÅ∏Êäû (1-4): ');
  let newVersion;
  
  switch (choice) {
    case '1':
      newVersion = 'patch';
      break;
    case '2':
      newVersion = 'minor';
      break;
    case '3':
      newVersion = 'major';
      break;
    case '4':
      newVersion = await prompt('„Éê„Éº„Ç∏„Éß„É≥„ÇíÂÖ•Âäõ (‰æã: 1.2.3): ');
      break;
    default:
      console.log('ÁÑ°Âäπ„Å™ÈÅ∏Êäû„Åß„Åô');
      process.exit(1);
  }
  
  // 6. CHANGELOGÁîüÊàê
  console.log('\nüìù CHANGELOGÁîüÊàê‰∏≠...');
  const changelog = await prompt('„Åì„ÅÆ„É™„É™„Éº„Çπ„ÅÆ‰∏ª„Å™Â§âÊõ¥ÁÇπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: ');
  
  // 7. „Éê„Éº„Ç∏„Éß„É≥Êõ¥Êñ∞„Å®„Çø„Ç∞‰ΩúÊàê
  console.log('\nüè∑Ô∏è  „Éê„Éº„Ç∏„Éß„É≥Êõ¥Êñ∞‰∏≠...');
  exec(`npm version ${newVersion} -m "chore: release v%s\n\n${changelog}"`);
  
  // 8. „Éó„ÉÉ„Ç∑„É•
  console.log('\nüì§ GitHub„Å∏„Éó„ÉÉ„Ç∑„É•‰∏≠...');
  exec('git push origin main --tags');
  
  console.log('\n‚úÖ „É™„É™„Éº„Çπ„Éó„É≠„Çª„ÇπÂÆå‰∫ÜÔºÅ');
  console.log('GitHub Actions„ÅånpmÂÖ¨Èñã„ÇíËá™ÂãïÁöÑ„Å´ÂÆüË°å„Åó„Åæ„Åô„ÄÇ');
  console.log('ÈÄ≤Êçó„ÅØ„Åì„Å°„Çâ„ÅßÁ¢∫Ë™ç: https://github.com/Kazu-dnssweeper/dnssweeper-cli/actions');
  
  rl.close();
}

main().catch(error => {
  console.error('‚ùå „Ç®„É©„Éº:', error.message);
  process.exit(1);
});
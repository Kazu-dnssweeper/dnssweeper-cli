name: Claude Code Action

on:
  # 定期実行（日本時間 23:00, 0:00, 1:00, 2:00, 3:00, 4:00, 5:00）
  schedule:
    - cron: '0 14,15,16,17,18,19,20 * * *'
  
  # @claudeメンションでトリガー
  issue_comment:
    types: [created]
  
  # 手動実行
  workflow_dispatch:
    inputs:
      task:
        description: 'Task for Claude to perform'
        required: true
        default: 'analyze-and-improve'
        type: choice
        options:
          - analyze-and-improve
          - enhance-tests
          - optimize-performance
          - update-documentation
          - security-review

jobs:
  claude-development:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'schedule' || 
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests before Claude action
      run: npm test -- --passWithNoTests --ci --forceExit
      continue-on-error: true
    
    - name: Prepare task for Claude
      id: prepare-task
      run: |
        if [ "${{ github.event_name }}" == "schedule" ]; then
          # 夜間自動実行時のタスク
          echo "task=以下の優先順位で改善を実施してください：
          1. 失敗しているテストの修正
          2. 新機能の実装（patterns.jsonの拡充など）
          3. パフォーマンスの最適化
          4. ドキュメントの更新
          5. テストカバレッジの向上（目標80%）" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "issue_comment" ]; then
          # コメントからタスクを抽出
          echo "task=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
        else
          # 手動実行時
          echo "task=${{ github.event.inputs.task }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Claude Code Action
      uses: anthropics/claude-code-action@beta
      with:
        api-key: ${{ secrets.CLAUDE_API_KEY }}
        model: claude-3-sonnet-20240229
        max-tokens: 4000
        temperature: 0.3
        task: |
          DNSweeper CLIの開発タスク:
          
          ${{ steps.prepare-task.outputs.task }}
          
          コンテキスト:
          - プロジェクト: DNSweeper CLI (DNS未使用レコード検出ツール)
          - 言語: TypeScript
          - フレームワーク: Commander.js, Jest
          - 開発ルール: CLAUDE.md, DNSweeper Claude Code 開発ルール.md を参照
          
          実行ガイドライン:
          1. 必ず日本語でコメントを書く
          2. テストは必ず完走させる
          3. エラーゼロ原則を守る
          4. 変更後はdnssweeper-context.mdを更新する
    
    - name: Run tests after Claude action
      run: npm test -- --passWithNoTests --ci --forceExit
    
    - name: Create pull request
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "feat: Claude Code automatic improvements"
        title: "🤖 Claude Code Automatic Improvements"
        body: |
          ## 🤖 自動改善PR
          
          このPRはClaude Code Actionによって自動生成されました。
          
          ### 実行タスク
          ${{ steps.prepare-task.outputs.task }}
          
          ### チェックリスト
          - [ ] テストが成功している
          - [ ] TypeScriptエラーがない
          - [ ] ESLintエラーがない
          - [ ] ドキュメントが更新されている
          
          ### レビュー依頼
          @Kazu-dnssweeper
        branch: claude-improvements-${{ github.run_number }}
        delete-branch: true
    
    - name: Notify Slack (optional)
      if: always() && env.SLACK_WEBHOOK_URL != ''
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        STATUS="${{ job.status }}"
        COLOR=$([ "$STATUS" == "success" ] && echo "good" || echo "danger")
        MESSAGE="Claude Code Action: $STATUS\\nタスク: ${{ steps.prepare-task.outputs.task }}"
        
        curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-Type: application/json' \
          -d "{\"attachments\": [{\"color\": \"$COLOR\", \"text\": \"$MESSAGE\"}]}"